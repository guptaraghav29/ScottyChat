<link rel="preconnect" href="https://fonts.gstatic.com">
<link href="https://fonts.googleapis.com/css2?family=Montserrat:wght@400;500&display=swap" rel="stylesheet">

<body style="background-image: repeating-radial-gradient(rgb(243, 190, 200),#b6c5f1);"></body>

<div class="roomContainer">


<div class="roomPage">
    <h1 id= "welcomeMessage"> Welcome to Chat Room {{ name }}! </h1>

    {{!-- This div contains all messages for the current chatroom --}}
 <div class="hidescroll">
     <div class="search">
            <input id="searchInput" placeholder="Search Messages">
        </div>
    <div class="messages"> 
        {{!-- Search mesage input field --}}
        

        {{!-- Using handlebars syntax to display all messages --}}
        {{#each messages}}
        <div class="allMessages">
            <div class="messageContainer">
                <div class="username">{{this.username.first}}</div>
                <div class="messageDate">&nbsp;{{date}}</div>
                <img class="trash" src="/images/trash.jpg" name="{{{message}}}" alt="{{{userID}}}">
                <img class="edit" src="/images/edit.png" name="{{{message}}}" alt="{{{userID}}}">
            </div>
            <div class="message"> 
                {{message}} 
            </div>
        </div>
        {{/each}}
    </div>
</div>
    {{!-- This div contains an input box and a send button --}}
    <div class="inputBox">
        
            <input id="userInput" name="message" placeholder="Type something...">
            <button type="button" id="send"  >Send</button>
        
    </div>
</div>



{{!-- Socket.io --}}
<script src="https://cdn.socket.io/3.0.0/socket.io.js"></script>
<script>
    var childrenMessage = document.querySelectorAll(".allMessages")
    var input = document.querySelector('#userInput')
        input.addEventListener("input", grabMessage) //Grab the input box
        input.focus()
    document.querySelector('#send').addEventListener("click", sendMessage)      //Grab the send button
    document.querySelectorAll(".trash").forEach( item => item.addEventListener("click", confirmTrash))
    document.querySelectorAll(".edit").forEach( item => item.addEventListener("click", confirmEdit))
    document.querySelector("#searchInput").addEventListener('input', searchMessage)
    document.querySelector("#userInput").addEventListener('keydown', sendMessageEnter)

    //Grabbing the info from the cookies
    var roomName = ""
    var sessionUserID = ""
    document.cookie.split(';').forEach( item => {
        var value = item.search("roomName")
        if( value !== -1 ){
            roomName = item.substring( item.search("=")+1 )
        }else{
            value = item.search("sessionUserId")
            if( value !== -1 ){
                sessionUserID = item.substring( item.search("=")+1 )
            }
        }
    })
    

    //This is where input box's value will be stored in
    var newMessage = ""

    //Callback function for input box
    function grabMessage( text ){
        newMessage = text.target.value
        console.log(newMessage)
    }

    //Callback function for send button
    function sendMessage( item ) {
        //Each time the user press send, socket will emit an event and pass
        //user's message, along with info that is inside the cookies
        console.log(`********** msg: ${newMessage}, roomName: ${roomName}, sessID: ${sessionUserID}`)

        socket.emit('newMessage', {
            message:  newMessage,
            roomName: roomName,
            sessionUserID: sessionUserID
        })
    }

    function sendMessageEnter( event ){
        console.log("ENter press")
        if( event.key === "Enter" ){
            event.preventDefault()
            document.getElementById("send").click()
        }
    }

    //Callback function for deleteing message
    function confirmTrash( event ){
        var confirmDelete = confirm("Are you sure you want to delete this message?")
        if( confirmDelete ){
            newMessage = event.target.name
            var userID = event.target.alt
            socket.emit('deleteMessage', {
                userID: userID,
                sessionUserID: sessionUserID,
                roomName: roomName,
                message:  newMessage,
            })
        }
    }

    function confirmEdit( event ){
        console.log("CLICK EIDTING")
        var editInput = prompt("Please enter new message: ", "New Message Here...")
        if( editInput != null || editInput !== "" ){
            newMessage = event.target.name
            var userID = event.target.alt
            socket.emit('editMessage', {
                userID: userID,
                sessionUserID: sessionUserID,
                roomName: roomName,
                message:  newMessage,
                newMessage: editInput
            })
        }
    }

    var searchText = ""
    function searchMessage( event ){
        searchText = event.target.value.trim().toLowerCase()
        //childrenMessage[0].querySelector('.message').innerHTML
        if( searchText !== "" ){
            childrenMessage.forEach( message => {
                var word = message.querySelector('.message').innerHTML.toLowerCase().split(/\W+/)
                if( word.some( keyword => keyword === searchText )){
                    message.style.display = "block"
                }else{
                    message.style.display = "none"
                }
            })
        }else if( searchText === ""){
            childrenMessage.forEach( message => {
                message.style.display = "block"
            })
        }
    }

    //Socket listening
    //Each time socket detects "newMessage" event from the server, it will refresh the page.
    const socket = io('http://localhost:8080')
    socket.on('newMessage', data => {
        console.log(`New message received for chatroom ${roomName}. Refreshing page...`)
        location.reload()
    })

    socket.on('deleteMessage', _ => location.reload() )

    socket.on('deleteRejected', _ =>  alert("You cannnot delete other's messages."))

    socket.on('editMessage', _ => location.reload() )

    socket.on('editRejected', _ => alert("You cannnot edit other's messages."))


    //This line automatically scrolls to the bottom of the message box each time this page is loaded.
    document.querySelector('.messages').scrollTop = document.querySelector('.messages').scrollHeight
</script>